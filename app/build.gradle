apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: 'jacoco.gradle'
apply from: 'play.gradle'
apply from: 'version.gradle'

def appVersionCode = getVersionCode()
def appVersionName = getVersionName()

def SDK_VERSION = 28

android {
    compileSdkVersion SDK_VERSION

    defaultConfig {
        applicationId "io.github.gianpamx.splitter"
        minSdkVersion 19
        targetSdkVersion SDK_VERSION
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "io.github.gianpamx.splitter.CustomTestRunner"
    }
    signingConfigs {
        release {
            storeFile file(signingStoreFile)
            storePassword signingStorePassword
            keyAlias signingKeyAlias
            keyPassword signingKeyPassword
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

androidExtensions {
    experimental = true
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {
    def daggerVersion = '2.16'
    def archCompVersion = '2.0.0'
    def roomVersion = '2.1.0-alpha01'
    def mockitoKotlinVersion = '1.5.0'
    def glideVersion = '4.7.1'
    def retrofitVersion = '2.3.0'
    def compatVersion = '1.0.0'
    def runnerVersion = '1.1.0-beta02'
    def coroutinesVersion = '0.22.5'

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "androidx.appcompat:appcompat:$compatVersion"
    implementation "com.google.android.material:material:$compatVersion"
    implementation "androidx.cardview:cardview:$compatVersion"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    implementation "androidx.lifecycle:lifecycle-extensions:$archCompVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$archCompVersion"

    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:annotations:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    testImplementation "junit:junit:4.12"
    testImplementation "org.hamcrest:hamcrest-library:1.3"
    testImplementation "androidx.arch.core:core-testing:$archCompVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"


    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    androidTestImplementation "org.mockito:mockito-android:2.23.0"
    androidTestImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
    androidTestImplementation "androidx.test:rules:$runnerVersion"
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.0-beta02"
    androidTestImplementation "androidx.arch.core:core-testing:$archCompVersion"
    androidTestImplementation("com.schibsted.spain:barista:2.7.0") {
        exclude group: "com.android.support"
        exclude group: "org.jetbrains.kotlin"
    }
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"
}
